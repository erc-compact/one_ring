// Obtain current hostname
def hostname = "hostname".execute().text.trim().replace("-", "")

// Check if this configuration is being loaded on the expected cluster
def expectedHostname = "csched"

if (!hostname.startsWith(expectedHostname)) {
    throw new IllegalStateException("""
    ===============================================================
    ERROR: You are trying to run the pipeline on the '${hostname}' cluster
    but the configuration is specifically for the '${expectedHostname}' cluster.
    Please ensure you're using the correct configuration/profile.
    ===============================================================
    """.stripIndent())
}

    
    module = ['java/17.0.4', 'apptainer']

    //Set up apptainer containers and mount path
    apptainer {
        enabled = true
        runOptions = '--env="CUDA_VISIBLE_DEVICES=${CUDA_VISIBLE_DEVICES}" -B /b -B /bscratch -B /homes --nv'
        envWhitelist = 'APPTAINER_BINDPATH, APPTAINER_LD_LIBRARY_PATH'
    }

    env {
        APPTAINER_IMAGE_PATH = "/b/u/vishnu/SINGULARITY_IMAGES"
    }

    params {
        
        //For Database entry
        hardware = "Contra"
        apptainer_images {

        peasoup = "${env.APPTAINER_IMAGE_PATH}/peasoup_sm89.sif"
        presto = "${env.APPTAINER_IMAGE_PATH}/pulsar-miner_turing-sm75.sif"
        pulsarx = "${env.APPTAINER_IMAGE_PATH}/pulsarx_latest.sif" 
        sql = "${env.APPTAINER_IMAGE_PATH}/compact_sql_latest.sif"   
        kafka = "${env.APPTAINER_IMAGE_PATH}/kafka_producer_latest.sif"
        pics  = "${env.APPTAINER_IMAGE_PATH}/pics_20230630_pics_model_update.sif"
        candy_picker = "${env.APPTAINER_IMAGE_PATH}/candy_picker_latest.sif"

        }
        publish_dir_prefix = "/b/PROCESSING"    
    }



   // HT-Condor Executor for Contra Dresden Cluster
    
    executor {
        name = 'condor'               
        pollInterval = '1 min'       // Determines how often to check for process termination. 
        queueSize = 1500               // Maximum number of jobs submitted at once
        submitRateLimit = '1/20s'     // Submits one job every 20 seconds
        exitReadTimeout = '10 min'     // How long to wait before returning an error status when a process is terminated but the .exitcode file does not exist or is empty
    }


    process {
        cache = 'lenient'

         withLabel: 'filtool' {
            cpus = 20
            memory = '8 GB'
            time = '5d'
            maxForks = 200

        }

         withLabel: 'pulsarx' {
            cpus = 10
            memory = '20 GB'
            time = '10d'
            maxForks = 300
            

        }

        withLabel: 'peasoup' {
        cpus = 1
        memory = '10 GB'
        time = '1h'
        clusterOptions = 'request_gpus = 1'
        //maxForks = 160
        }

         withLabel: 'pics' {
            cpus = 8
            memory = '8 GB'
            time = '10d'
            maxForks = 300

        }

        withLabel: 'calculate_post_folding_heuristics' {
            cpus = 4
            memory = '4 GB'
            time = '10d'
            maxForks = 300

        }
         withLabel: 'candy_picker' {
            cpus = 40
            memory = '4 GB'
            time = '10d'
            maxForks = 300

        }



    }
