// Obtain current hostname
def hostname = "hostname".execute().text.trim().replace("-", "")

// Check if this configuration is being loaded on the expected cluster
def expectedHostname = "csched"

if (!hostname.startsWith(expectedHostname)) {
    throw new IllegalStateException("""
    ===============================================================
    ERROR: You are trying to run the pipeline on the '${hostname}' cluster
    but the configuration is specifically for the '${expectedHostname}' cluster.
    Please ensure you're using the correct configuration/profile.
    ===============================================================
    """.stripIndent())
}

    
    module = ['java/17.0.4', 'apptainer']

    //Set up apptainer containers and mount path
    apptainer {
        enabled = true
        runOptions = '-B /b -B /bscratch --nv'
        envWhitelist = 'APPTAINER_BINDPATH, APPTAINER_LD_LIBRARY_PATH'
    }

    env {
        APPTAINER_IMAGE_PATH = "/b/u/vishnu/SINGULARITY_IMAGES"
    }

    params {
        
        data_dir = "/b/u/vishnu/SURVEYS"
        ptuse_dir = "${params.data_dir}/MeerTIME"
        trapum_dir = "${params.data_dir}/TRAPUM"
        raw_data = "${params.trapum_dir}/${target}/${utc}/816/${beam}/*64CHAN.fil"
        obs_header = "${params.trapum_dir}/${target}/${utc}/816/apsuse.meta"
        candyjar_metafile = "${params.obs_header}"

        //For Database entry
        hardware = "Contra"
        apptainer_images {

        peasoup = "${env.APPTAINER_IMAGE_PATH}/peasoup_latest.sif"
        presto = "${env.APPTAINER_IMAGE_PATH}/pulsar-miner_turing-sm75.sif"
        pulsarx = "${env.APPTAINER_IMAGE_PATH}/pulsarx_latest.sif" 
        sql = "${env.APPTAINER_IMAGE_PATH}/compact_sql_latest.sif"   
        kafka = "${env.APPTAINER_IMAGE_PATH}/kafka_producer_latest.sif

        }    
    }



   // HT-Condor Executor for Contra Dresden Cluster

    process {
        cache = 'lenient'
        executor = 'condor'

         withLabel: 'filtool' {
            cpus = 8
            memory = '30 GB'
            time = '1h'
            //clusterOptions = '--tmp=200GB'
            scratch = '/bscratch/$USER'


        }


         withLabel: 'pulsarx' {
            cpus = 4
            memory = '5 GB'
            time = '1h'
            //clusterOptions = '--tmp=200GB'
            scratch = '/bscratch/$USER'

        }

          withLabel: 'prepfold' {
            cpus = 4
            memory = '5 GB'
            time = '1h'
            //clusterOptions = '--tmp=200GB'
            scratch = '/bscratch/$USER'

        }

        withLabel: 'peasoup' {
        cpus = 1
        memory = '40 GB'
        queue = 'milan-gpu'
        time = '30m'
        //clusterOptions = '--gres=gpu:1 --tmp=200GB'
        scratch = '/bscratch/$USER'
        }

        withLabel: 'candyjar' {
            cpus = 1
            memory = '5 GB'
            queue = 'milan'
            time = '12h'
            scratch = '/bscratch/$USER'

        }

        withLabel: 'long' {
            cpus = 1
            memory = '5 GB'
            queue = 'skylake'
            time = '7d'
            //clusterOptions = '--tmp=200GB'
            scratch = '/bscratch/$USER'

        }

        withLabel: 'gpu' {
        cpus = 1
        memory = '20 GB'
        time = '12h'
        //clusterOptions = '--gres=gpu:1 --tmp=200GB'
        scratch = '/bscratch/$USER'
        //beforeScript   = "module load ${params.module}"
        }

        withLabel: 'gpu_short' {
        cpus = 1
        memory = '50 GB'
        queue = 'skylake-gpu'
        time = '2h'
        //clusterOptions = '--gres=gpu:1 --tmp=200GB'
        scratch = '/bscratch/$USER'
        
        }

        withLabel: 'long_multi' {
            cpus = 16
            memory = '100 GB'
            queue = 'skylake'
            time = '7d'
            //clusterOptions = '--tmp=200GB'
            scratch = '/bscratch/$USER'

        }

    }
