
plugins {
    id 'nf-live-tracking@2.0.0'
}

params {
outputdir = "results" //Fill in the beam name here in production
}

live {
    enabled = true
    //file = "${params.outputdir}/PROGRESS"
    file = "/bscratch/vishnu/NGC1851_PROCESSING/LIVE_PROGRESS/PROGRESS"
    overwrite = true
    interval = 5  // Interval in seconds for JSON dumps

}



params {

//Observation INFO
project = "COMPACT"
pipeline_name = "ACCEL_SEARCH"
telescope = "MeerKAT"
target = "J0514-4002A"
files_to_search="${baseDir}/sample_file.txt"

filtool {
    rfi_filter = "kadaneF 8 4 zdot"
    zap_string = ""
    //(Any additional flags eg -scloffs)
    extra_args = "-z zap 552.0 553.0 -z zap 926.0 927.0 -z zap 934.0 952.0 -z zap 1036.0 1037.0 -z zap 1062.0 1063.0 -z zap 1079.0 1080.0"
    telescope = "meerkat"
    filplan = ""
    time_decimation_factor = 1
    freq_decimation_factor = 1
    nbits = 8
    mean = 128
    std = 6
    threads = 20
    get_metadata = "${baseDir}/get_metadata.py"

}

// Define a list of configurations as a JSON string, each one corresponding to a peasoup run.
// A user can have one, or many. If only one is desired, provide a single map.
//cfg_name is output directory structure for publishing XML files
peasoup = '''
    [
      { "cfg_name"    : "60m/ck00", 
        "fft_size": "268435456",
        "start_sample": "0",
        "nsamples": null,
        "acc_start": "-150.0",
        "acc_end": "150.0",
        "min_freq": "0.1",
        "max_freq": "1100.0",
        "dm_pulse_width": "64",
        "acc_pulse_width": "64",
        "min_snr": "6.0",
        "ram_limit_gb": "45.0",
        "nh": "5",
        "ngpus": "1",
        "total_cands": "1250",
        "accel_tol": 1.11,
        "birdie_list": null,
        "chan_mask": null,
        "extra_args": null
      },  
      { "cfg_name"    : "60m/ck01", 
        "fft_size": "268435456",
        "start_sample": "206110720",
        "nsamples": null,
        "acc_start": "-150.0",
        "acc_end": "150.0",
        "min_freq": "0.1",
        "max_freq": "1100.0",
        "dm_pulse_width": "64",
        "acc_pulse_width": "64",
        "min_snr": "6.0",
        "ram_limit_gb": "45.0",
        "nh": "5",
        "ngpus": "1",
        "total_cands": "1250",
        "accel_tol": 1.11,
        "birdie_list": null,
        "chan_mask": null,
        "extra_args": null
      },
      { "cfg_name"    : "30m/ck00", 
        "fft_size": "134217728",
        "start_sample": "0",
        "nsamples": null,
        "acc_start": "-360.0",
        "acc_end": "360.0",
        "min_freq": "0.1",
        "max_freq": "1100.0",
        "dm_pulse_width": "64",
        "acc_pulse_width": "64",
        "min_snr": "6.0",
        "ram_limit_gb": "45.0",
        "nh": "5",
        "ngpus": "1",
        "total_cands": "625",
        "accel_tol": 1.11,
        "birdie_list": null,
        "chan_mask": null,
        "extra_args": null
      },
      { "cfg_name"    : "30m/ck01", 
        "fft_size": "134217728",
        "start_sample": "134217728",
        "nsamples": null,
        "acc_start": "-360.0",
        "acc_end": "360.0",
        "min_freq": "0.1",
        "max_freq": "1100.0",
        "dm_pulse_width": "64",
        "acc_pulse_width": "64",
        "min_snr": "6.0",
        "ram_limit_gb": "45.0",
        "nh": "5",
        "ngpus": "1",
        "total_cands": "625",
        "accel_tol": 1.11,
        "birdie_list": null,
        "chan_mask": null,
        "extra_args": null
      },
      { "cfg_name"    : "30m/ck02", 
        "fft_size": "134217728",
        "start_sample": "268435456",
        "nsamples": null,
        "acc_start": "-360.0",
        "acc_end": "360.0",
        "min_freq": "0.1",
        "max_freq": "1100.0",
        "dm_pulse_width": "64",
        "acc_pulse_width": "64",
        "min_snr": "6.0",
        "ram_limit_gb": "45.0",
        "nh": "5",
        "ngpus": "1",
        "total_cands": "625",
        "accel_tol": 1.11,
        "birdie_list": null,
        "chan_mask": null,
        "extra_args": null
      },
      { "cfg_name"    : "30m/ck03", 
        "fft_size": "134217728",
        "start_sample": "340328448",
        "nsamples": null,
        "acc_start": "-360.0",
        "acc_end": "360.0",
        "min_freq": "0.1",
        "max_freq": "1100.0",
        "dm_pulse_width": "64",
        "acc_pulse_width": "64",
        "min_snr": "6.0",
        "ram_limit_gb": "45.0",
        "nh": "5",
        "ngpus": "1",
        "total_cands": "625",
        "accel_tol": 1.11,
        "birdie_list": null,
        "chan_mask": null,
        "extra_args": null
      },
      {
        "cfg_name": "15m/ck00",
        "fft_size": "67108864",
        "start_sample": "0",
        "nsamples": null,
        "acc_start": "-900.0",
        "acc_end": "900.0",
        "min_freq": "0.1",
        "max_freq": "1100.0",
        "dm_pulse_width": "64",
        "acc_pulse_width": "64",
        "min_snr": "5.0",
        "ram_limit_gb": "45.0",
        "nh": "5",
        "ngpus": "1",
        "total_cands": "325",
        "accel_tol": 1.11,
        "birdie_list": null,
        "chan_mask": null,
        "extra_args": null
      },
      {
        "cfg_name": "15m/ck01",
        "fft_size": "67108864",
        "start_sample": "67108864",
        "nsamples": null,
        "acc_start": "-900.0",
        "acc_end": "900.0",
        "min_freq": "0.1",
        "max_freq": "1100.0",
        "dm_pulse_width": "64",
        "acc_pulse_width": "64",
        "min_snr": "5.0",
        "ram_limit_gb": "45.0",
        "nh": "5",
        "ngpus": "1",
        "total_cands": "325",
        "accel_tol": 1.11,
        "birdie_list": null,
        "chan_mask": null,
        "extra_args": null
      },
      {
        "cfg_name": "15m/ck02",
        "fft_size": "67108864",
        "start_sample": "134217728",
        "nsamples": null,
        "acc_start": "-900.0",
        "acc_end": "900.0",
        "min_freq": "0.1",
        "max_freq": "1100.0",
        "dm_pulse_width": "64",
        "acc_pulse_width": "64",
        "min_snr": "5.0",
        "ram_limit_gb": "45.0",
        "nh": "5",
        "ngpus": "1",
        "total_cands": "325",
        "accel_tol": 1.11,
        "birdie_list": null,
        "chan_mask": null,
        "extra_args": null
      },
      {
        "cfg_name": "15m/ck03",
        "fft_size": "67108864",
        "start_sample": "201326592",
        "nsamples": null,
        "acc_start": "-900.0",
        "acc_end": "900.0",
        "min_freq": "0.1",
        "max_freq": "1100.0",
        "dm_pulse_width": "64",
        "acc_pulse_width": "64",
        "min_snr": "5.0",
        "ram_limit_gb": "45.0",
        "nh": "5",
        "ngpus": "1",
        "total_cands": "325",
        "accel_tol": 1.11,
        "birdie_list": null,
        "chan_mask": null,
        "extra_args": null
      },
      {
        "cfg_name": "15m/ck04",
        "fft_size": "67108864",
        "start_sample": "268435456",
        "nsamples": null,
        "acc_start": "-900.0",
        "acc_end": "900.0",
        "min_freq": "0.1",
        "max_freq": "1100.0",
        "dm_pulse_width": "64",
        "acc_pulse_width": "64",
        "min_snr": "5.0",
        "ram_limit_gb": "45.0",
        "nh": "5",
        "ngpus": "1",
        "total_cands": "325",
        "accel_tol": 1.11,
        "birdie_list": null,
        "chan_mask": null,
        "extra_args": null
      },
      {
        "cfg_name": "15m/ck05",
        "fft_size": "67108864",
        "start_sample": "335544320",
        "nsamples": null,
        "acc_start": "-900.0",
        "acc_end": "900.0",
        "min_freq": "0.1",
        "max_freq": "1100.0",
        "dm_pulse_width": "64",
        "acc_pulse_width": "64",
        "min_snr": "5.0",
        "ram_limit_gb": "45.0",
        "nh": "5",
        "ngpus": "1",
        "total_cands": "325",
        "accel_tol": 1.11,
        "birdie_list": null,
        "chan_mask": null,
        "extra_args": null
      },
      {
        "cfg_name": "15m/ck06",
        "fft_size": "67108864",
        "start_sample": "402653184",
        "nsamples": null,
        "acc_start": "-900.0",
        "acc_end": "900.0",
        "min_freq": "0.1",
        "max_freq": "1100.0",
        "dm_pulse_width": "64",
        "acc_pulse_width": "64",
        "min_snr": "5.0",
        "ram_limit_gb": "45.0",
        "nh": "5",
        "ngpus": "1",
        "total_cands": "325",
        "accel_tol": 1.11,
        "birdie_list": null,
        "chan_mask": null,
        "extra_args": null
      },
      {
        "cfg_name": "15m/ck07",
        "fft_size": "67108864",
        "start_sample": "407437312",
        "nsamples": null,
        "acc_start": "-900.0",
        "acc_end": "900.0",
        "min_freq": "0.1",
        "max_freq": "1100.0",
        "dm_pulse_width": "64",
        "acc_pulse_width": "64",
        "min_snr": "5.0",
        "ram_limit_gb": "45.0",
        "nh": "5",
        "ngpus": "1",
        "total_cands": "325",
        "accel_tol": 1.11,
        "birdie_list": null,
        "chan_mask": null,
        "extra_args": null
      }
    ]
    '''
/* 
 * Dispersion Plan Definition (`dd_plan`)
 * 
 * FORMAT:
 * <coherent_dm>:<start_incoherent_dm>:<end_incoherent_dm>:<dm_step>:<tscrunch>
 *
 * Fields:
 * - coherent_dm        : Coherent dispersion measure used during recording.
 * - start_incoherent_dm: Starting DM to perform dedispersion.
 * - end_incoherent_dm  : Ending DM to perform dedispersion.
 * - dm_step            : Step size of DM trials.
 * - tscrunch           : Time-scrunching factor (averaging over time).
 *
 * The pipeline selects rows based on the `coherent_dm` and `subband_dm` values in your filterbank csv file:
 * - If only `coherent_dm` is given, rows with the matching `coherent_dm` will be selected.
 * - If both `coherent_dm` and `subband_dm` are given, `subband_dm` will be used to match rows.
 * - If no values are given, rows starting with `coherent_dm = 0` will run in parallel.
 */

// Dispersion Plan
dd_plan = [
    "47.0:46.75:47.25:0.025:1",
    "47.5:47.25:47.75:0.025:1",
    "48.0:47.75:48.25:0.025:1",
    "48.5:48.25:48.75:0.025:1",
    "49.0:48.75:49.25:0.025:1",
    "49.5:49.25:49.75:0.025:1",
    "50.0:49.75:50.25:0.025:1",
    "50.5:50.25:50.75:0.025:1",
    "51.0:50.75:51.25:0.025:1",
    "51.5:51.25:51.75:0.025:1",
    "52.0:51.75:52.25:0.025:1",
    "52.5:52.25:52.75:0.025:1",
    "53.0:52.75:53.25:0.025:1",
    "53.5:53.25:53.75:0.025:1",
    "54.0:53.75:54.25:0.025:1",
    "54.5:54.25:54.75:0.025:1",
    "55.0:54.75:55.25:0.025:1",
    "55.5:55.25:55.75:0.025:1",
    "56.0:55.75:56.25:0.025:1",
    "56.5:56.25:56.75:0.025:1"
]


pulsarx{
    nbins_high = 128 //Upper limit of profile bins for slow pulsars (p > 10 ms)
    nbins_low = 64  //Lower limit of profile bins for rest (p < 10 ms)
    nsubband = 64
    subint_length = null //Default value. Tobs/64
    template_file = "${baseDir}/include/fold_templates/meerkat_fold_UHF.template"
    clfd_q_value = 2.0
    rfi_filter = ""
    threads = 10
    extra_args = ""

}

candidate_filter {

    candy_picker {
        enable = 1
        period_tolerance = 1e-7
        dm_tolerance = 100.0
    }

    ml_candidate_scoring {
        enable = 1
        models_dir = "${baseDir}/include/ml_models"
        pics_script = "${baseDir}/scripts/pics_classifier_multiple_models.py"
    }

    calculate_post_folding_heuristics {
        enable = 1
        alpha_snr_threshold = 0.0
        script = "${baseDir}/scripts/calculate_alpha_beta_gamma_dmffdot.py"
        //-> Currently supports alpha, beta, gamma and delta.
    }
    
}


folding {
    script = "${baseDir}/scripts/fold_peasoup_candidates.py"
    // Each key is a group name (e.g., "first_run") and the value is a list of configuration dictionaries.
    configuration = [
        tyrion: [
            [
                // Parameter ranges for filtering candidates (set 1)
                spin_period: [min: 0.0001, max: 10.0], // in seconds
                dm: [min: 0.0, max: 100.0],           // dispersion measure in pc/cm^3
                fft_snr: [min: 9.0, max: 10000.0],         // FFT signal-to-noise ratio
                nh: [min: 0, max: 5],                     // number of summed harmonics
                acc: [min: -1000.0, max: 1000.0],               // acceleration range
                total_cands_limit: 2500                   // max candidates to process in this set
            ],
            [
                // Parameter ranges for filtering candidates (set 2)
                spin_period: [min: 0.003, max: 10.0],
                dm: [min: 0.0, max: 100.0],
                fft_snr: [min: 8.0, max: 9.0],
                nh: [min: 0, max: 5],
                acc: [min: -1000.0, max: 1000.0], 
                total_cands_limit: 2500
            ],
            [
                // Parameter ranges for filtering candidates (set 2)
                spin_period: [min: 0.002, max: 0.003],
                dm: [min: 0.0, max: 100.0],
                fft_snr: [min: 8.0, max: 9.0],
                nh: [min: 0, max: 5],
                acc: [min: -10.0, max: 10.0], 
                total_cands_limit: 2500
            ],
            [
                // Parameter ranges for filtering candidates (set 2)
                spin_period: [min: 0.0001, max: 0.002],
                dm: [min: 0.0, max: 100.0],
                fft_snr: [min: 0.0, max: 9.0],
                nh: [min: 2, max: 5],
                acc: [min: -2.0, max: 2.0], 
                total_cands_limit: 2500
            ]
        ]
    ]

}
   
kafka {
save_search_candidate_uuid = "${baseDir}/generate_uuid_search_candidate.py"
merged_fold_search = "${baseDir}/scripts/merge_fold_candidates_for_kafka.py"
}



}

profiles {
   local {
    includeConfig 'local.config'   
 }
   hercules {
    includeConfig 'hercules.config'
  }
  ozstar {
    includeConfig 'ozstar.config'
  }
  nt {
    includeConfig 'nt.config'
  }
  contra {
    includeConfig 'contra.config'
  }

}



